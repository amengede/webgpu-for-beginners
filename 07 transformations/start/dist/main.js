(()=>{"use strict";const e="struct Fragment {\r\n    @builtin(position) Position : vec4<f32>,\r\n    @location(0) Color : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) vertexPostion: vec2<f32>, @location(1) vertexColor: vec3<f32>) -> Fragment {\r\n\r\n    var output : Fragment;\r\n    output.Position = vec4<f32>(vertexPostion, 0.0, 1.0);\r\n    output.Color = vec4<f32>(vertexColor, 1.0);\r\n\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32> {\r\n    return Color;\r\n}";class t{constructor(e){const t=new Float32Array([0,.5,1,0,0,-.5,-.5,0,1,0,.5,-.5,0,0,1]),i=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,r={size:t.byteLength,usage:i,mappedAtCreation:!0};this.buffer=e.createBuffer(r),new Float32Array(this.buffer.getMappedRange()).set(t),this.buffer.unmap(),this.bufferLayout={arrayStride:20,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x3",offset:8}]}}}var i=function(e,t,i,r){return new(i||(i=Promise))((function(n,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function s(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};const r=document.getElementById("gfx-main"),n=new class{constructor(e){this.canvas=e}Initialize(){return i(this,void 0,void 0,(function*(){yield this.setupDevice(),this.createAssets(),yield this.makePipeline(),this.render()}))}setupDevice(){var e,t;return i(this,void 0,void 0,(function*(){this.adapter=yield null===(e=navigator.gpu)||void 0===e?void 0:e.requestAdapter(),this.device=yield null===(t=this.adapter)||void 0===t?void 0:t.requestDevice(),this.context=this.canvas.getContext("webgpu"),this.format="bgra8unorm",this.context.configure({device:this.device,format:this.format,alphaMode:"opaque"})}))}makePipeline(){return i(this,void 0,void 0,(function*(){const t=this.device.createBindGroupLayout({entries:[]});this.bindGroup=this.device.createBindGroup({layout:t,entries:[]});const i=this.device.createPipelineLayout({bindGroupLayouts:[t]});this.pipeline=this.device.createRenderPipeline({vertex:{module:this.device.createShaderModule({code:e}),entryPoint:"vs_main",buffers:[this.triangleMesh.bufferLayout]},fragment:{module:this.device.createShaderModule({code:e}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"},layout:i})}))}createAssets(){this.triangleMesh=new t(this.device)}render(){const e=this.device.createCommandEncoder(),t=this.context.getCurrentTexture().createView(),i=e.beginRenderPass({colorAttachments:[{view:t,clearValue:{r:.5,g:0,b:.25,a:1},loadOp:"clear",storeOp:"store"}]});i.setPipeline(this.pipeline),i.setVertexBuffer(0,this.triangleMesh.buffer),i.setBindGroup(0,this.bindGroup),i.draw(3,1,0,0),i.end(),this.device.queue.submit([e.finish()])}}(r);n.Initialize()})();